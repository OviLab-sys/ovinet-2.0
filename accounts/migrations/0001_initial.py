# Generated by Django 5.2.6 on 2025-09-23 12:16

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('vendors', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('phone_number', models.CharField(help_text='Your phone number for login and MPesa payments', max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid Kenyan phone number (e.g., 0721630939, +254721630939, 254721630939)', regex='^(\\+?254|0)?[17]\\d{8}$')], verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, help_text='Required for vendor accounts', max_length=254, null=True, unique=True, verbose_name='Email Address')),
                ('national_id', models.CharField(blank=True, help_text='National ID number (required for vendor accounts)', max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid National ID number', regex='^[0-9]{6,12}$')], verbose_name='National ID Number')),
                ('user_type', models.CharField(choices=[('vendor_admin', 'Vendor Admin'), ('vendor_staff', 'Vendor Staff'), ('end_user', 'End User')], default='end_user', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='vendors.vendor')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
    ]
